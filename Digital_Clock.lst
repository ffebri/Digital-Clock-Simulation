                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW32)
                                      4 ; This file was generated Thu Jan 22 22:32:32 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module Digital_Clock
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _tampilkan_seven_segment
                                     14 	.globl _ambil_data
                                     15 	.globl _delay
                                     16 	.globl _CY
                                     17 	.globl _AC
                                     18 	.globl _F0
                                     19 	.globl _RS1
                                     20 	.globl _RS0
                                     21 	.globl _OV
                                     22 	.globl _FL
                                     23 	.globl _P
                                     24 	.globl _PS
                                     25 	.globl _PT1
                                     26 	.globl _PX1
                                     27 	.globl _PT0
                                     28 	.globl _PX0
                                     29 	.globl _RD
                                     30 	.globl _WR
                                     31 	.globl _T1
                                     32 	.globl _T0
                                     33 	.globl _INT1
                                     34 	.globl _INT0
                                     35 	.globl _TXD
                                     36 	.globl _RXD
                                     37 	.globl _P3_7
                                     38 	.globl _P3_6
                                     39 	.globl _P3_5
                                     40 	.globl _P3_4
                                     41 	.globl _P3_3
                                     42 	.globl _P3_2
                                     43 	.globl _P3_1
                                     44 	.globl _P3_0
                                     45 	.globl _EA
                                     46 	.globl _ES
                                     47 	.globl _ET1
                                     48 	.globl _EX1
                                     49 	.globl _ET0
                                     50 	.globl _EX0
                                     51 	.globl _P2_7
                                     52 	.globl _P2_6
                                     53 	.globl _P2_5
                                     54 	.globl _P2_4
                                     55 	.globl _P2_3
                                     56 	.globl _P2_2
                                     57 	.globl _P2_1
                                     58 	.globl _P2_0
                                     59 	.globl _SM0
                                     60 	.globl _SM1
                                     61 	.globl _SM2
                                     62 	.globl _REN
                                     63 	.globl _TB8
                                     64 	.globl _RB8
                                     65 	.globl _TI
                                     66 	.globl _RI
                                     67 	.globl _P1_7
                                     68 	.globl _P1_6
                                     69 	.globl _P1_5
                                     70 	.globl _P1_4
                                     71 	.globl _P1_3
                                     72 	.globl _P1_2
                                     73 	.globl _P1_1
                                     74 	.globl _P1_0
                                     75 	.globl _TF1
                                     76 	.globl _TR1
                                     77 	.globl _TF0
                                     78 	.globl _TR0
                                     79 	.globl _IE1
                                     80 	.globl _IT1
                                     81 	.globl _IE0
                                     82 	.globl _IT0
                                     83 	.globl _P0_7
                                     84 	.globl _P0_6
                                     85 	.globl _P0_5
                                     86 	.globl _P0_4
                                     87 	.globl _P0_3
                                     88 	.globl _P0_2
                                     89 	.globl _P0_1
                                     90 	.globl _P0_0
                                     91 	.globl _B
                                     92 	.globl _A
                                     93 	.globl _ACC
                                     94 	.globl _PSW
                                     95 	.globl _IP
                                     96 	.globl _P3
                                     97 	.globl _IE
                                     98 	.globl _P2
                                     99 	.globl _SBUF
                                    100 	.globl _SCON
                                    101 	.globl _P1
                                    102 	.globl _TH1
                                    103 	.globl _TH0
                                    104 	.globl _TL1
                                    105 	.globl _TL0
                                    106 	.globl _TMOD
                                    107 	.globl _TCON
                                    108 	.globl _PCON
                                    109 	.globl _DPH
                                    110 	.globl _DPL
                                    111 	.globl _SP
                                    112 	.globl _P0
                                    113 	.globl _data1
                                    114 	.globl _x
                                    115 	.globl _data_temp
                                    116 	.globl _jam2
                                    117 	.globl _jam1
                                    118 	.globl _menit2
                                    119 	.globl _menit1
                                    120 	.globl _detik2
                                    121 	.globl _detik1
                                    122 	.globl _milsec2
                                    123 	.globl _milsec1
                                    124 	.globl _angka
                                    125 ;--------------------------------------------------------
                                    126 ; special function registers
                                    127 ;--------------------------------------------------------
                                    128 	.area RSEG    (ABS,DATA)
      000000                        129 	.org 0x0000
                           000080   130 _P0	=	0x0080
                           000081   131 _SP	=	0x0081
                           000082   132 _DPL	=	0x0082
                           000083   133 _DPH	=	0x0083
                           000087   134 _PCON	=	0x0087
                           000088   135 _TCON	=	0x0088
                           000089   136 _TMOD	=	0x0089
                           00008A   137 _TL0	=	0x008a
                           00008B   138 _TL1	=	0x008b
                           00008C   139 _TH0	=	0x008c
                           00008D   140 _TH1	=	0x008d
                           000090   141 _P1	=	0x0090
                           000098   142 _SCON	=	0x0098
                           000099   143 _SBUF	=	0x0099
                           0000A0   144 _P2	=	0x00a0
                           0000A8   145 _IE	=	0x00a8
                           0000B0   146 _P3	=	0x00b0
                           0000B8   147 _IP	=	0x00b8
                           0000D0   148 _PSW	=	0x00d0
                           0000E0   149 _ACC	=	0x00e0
                           0000E0   150 _A	=	0x00e0
                           0000F0   151 _B	=	0x00f0
                                    152 ;--------------------------------------------------------
                                    153 ; special function bits
                                    154 ;--------------------------------------------------------
                                    155 	.area RSEG    (ABS,DATA)
      000000                        156 	.org 0x0000
                           000080   157 _P0_0	=	0x0080
                           000081   158 _P0_1	=	0x0081
                           000082   159 _P0_2	=	0x0082
                           000083   160 _P0_3	=	0x0083
                           000084   161 _P0_4	=	0x0084
                           000085   162 _P0_5	=	0x0085
                           000086   163 _P0_6	=	0x0086
                           000087   164 _P0_7	=	0x0087
                           000088   165 _IT0	=	0x0088
                           000089   166 _IE0	=	0x0089
                           00008A   167 _IT1	=	0x008a
                           00008B   168 _IE1	=	0x008b
                           00008C   169 _TR0	=	0x008c
                           00008D   170 _TF0	=	0x008d
                           00008E   171 _TR1	=	0x008e
                           00008F   172 _TF1	=	0x008f
                           000090   173 _P1_0	=	0x0090
                           000091   174 _P1_1	=	0x0091
                           000092   175 _P1_2	=	0x0092
                           000093   176 _P1_3	=	0x0093
                           000094   177 _P1_4	=	0x0094
                           000095   178 _P1_5	=	0x0095
                           000096   179 _P1_6	=	0x0096
                           000097   180 _P1_7	=	0x0097
                           000098   181 _RI	=	0x0098
                           000099   182 _TI	=	0x0099
                           00009A   183 _RB8	=	0x009a
                           00009B   184 _TB8	=	0x009b
                           00009C   185 _REN	=	0x009c
                           00009D   186 _SM2	=	0x009d
                           00009E   187 _SM1	=	0x009e
                           00009F   188 _SM0	=	0x009f
                           0000A0   189 _P2_0	=	0x00a0
                           0000A1   190 _P2_1	=	0x00a1
                           0000A2   191 _P2_2	=	0x00a2
                           0000A3   192 _P2_3	=	0x00a3
                           0000A4   193 _P2_4	=	0x00a4
                           0000A5   194 _P2_5	=	0x00a5
                           0000A6   195 _P2_6	=	0x00a6
                           0000A7   196 _P2_7	=	0x00a7
                           0000A8   197 _EX0	=	0x00a8
                           0000A9   198 _ET0	=	0x00a9
                           0000AA   199 _EX1	=	0x00aa
                           0000AB   200 _ET1	=	0x00ab
                           0000AC   201 _ES	=	0x00ac
                           0000AF   202 _EA	=	0x00af
                           0000B0   203 _P3_0	=	0x00b0
                           0000B1   204 _P3_1	=	0x00b1
                           0000B2   205 _P3_2	=	0x00b2
                           0000B3   206 _P3_3	=	0x00b3
                           0000B4   207 _P3_4	=	0x00b4
                           0000B5   208 _P3_5	=	0x00b5
                           0000B6   209 _P3_6	=	0x00b6
                           0000B7   210 _P3_7	=	0x00b7
                           0000B0   211 _RXD	=	0x00b0
                           0000B1   212 _TXD	=	0x00b1
                           0000B2   213 _INT0	=	0x00b2
                           0000B3   214 _INT1	=	0x00b3
                           0000B4   215 _T0	=	0x00b4
                           0000B5   216 _T1	=	0x00b5
                           0000B6   217 _WR	=	0x00b6
                           0000B7   218 _RD	=	0x00b7
                           0000B8   219 _PX0	=	0x00b8
                           0000B9   220 _PT0	=	0x00b9
                           0000BA   221 _PX1	=	0x00ba
                           0000BB   222 _PT1	=	0x00bb
                           0000BC   223 _PS	=	0x00bc
                           0000D0   224 _P	=	0x00d0
                           0000D1   225 _FL	=	0x00d1
                           0000D2   226 _OV	=	0x00d2
                           0000D3   227 _RS0	=	0x00d3
                           0000D4   228 _RS1	=	0x00d4
                           0000D5   229 _F0	=	0x00d5
                           0000D6   230 _AC	=	0x00d6
                           0000D7   231 _CY	=	0x00d7
                                    232 ;--------------------------------------------------------
                                    233 ; overlayable register banks
                                    234 ;--------------------------------------------------------
                                    235 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        236 	.ds 8
                                    237 ;--------------------------------------------------------
                                    238 ; internal ram data
                                    239 ;--------------------------------------------------------
                                    240 	.area DSEG    (DATA)
      000000                        241 _angka::
      000000                        242 	.ds 10
      00000A                        243 _milsec1::
      00000A                        244 	.ds 2
      00000C                        245 _milsec2::
      00000C                        246 	.ds 2
      00000E                        247 _detik1::
      00000E                        248 	.ds 2
      000010                        249 _detik2::
      000010                        250 	.ds 2
      000012                        251 _menit1::
      000012                        252 	.ds 2
      000014                        253 _menit2::
      000014                        254 	.ds 2
      000016                        255 _jam1::
      000016                        256 	.ds 2
      000018                        257 _jam2::
      000018                        258 	.ds 2
      00001A                        259 _data_temp::
      00001A                        260 	.ds 2
      00001C                        261 _x::
      00001C                        262 	.ds 2
      00001E                        263 _data1::
      00001E                        264 	.ds 2
                                    265 ;--------------------------------------------------------
                                    266 ; overlayable items in internal ram 
                                    267 ;--------------------------------------------------------
                                    268 	.area	OSEG    (OVR,DATA)
                                    269 ;--------------------------------------------------------
                                    270 ; Stack segment in internal ram 
                                    271 ;--------------------------------------------------------
                                    272 	.area	SSEG
      000000                        273 __start__stack:
      000000                        274 	.ds	1
                                    275 
                                    276 ;--------------------------------------------------------
                                    277 ; indirectly addressable internal ram data
                                    278 ;--------------------------------------------------------
                                    279 	.area ISEG    (DATA)
                                    280 ;--------------------------------------------------------
                                    281 ; absolute internal ram data
                                    282 ;--------------------------------------------------------
                                    283 	.area IABS    (ABS,DATA)
                                    284 	.area IABS    (ABS,DATA)
                                    285 ;--------------------------------------------------------
                                    286 ; bit data
                                    287 ;--------------------------------------------------------
                                    288 	.area BSEG    (BIT)
                                    289 ;--------------------------------------------------------
                                    290 ; paged external ram data
                                    291 ;--------------------------------------------------------
                                    292 	.area PSEG    (PAG,XDATA)
                                    293 ;--------------------------------------------------------
                                    294 ; external ram data
                                    295 ;--------------------------------------------------------
                                    296 	.area XSEG    (XDATA)
                                    297 ;--------------------------------------------------------
                                    298 ; absolute external ram data
                                    299 ;--------------------------------------------------------
                                    300 	.area XABS    (ABS,XDATA)
                                    301 ;--------------------------------------------------------
                                    302 ; external initialized ram data
                                    303 ;--------------------------------------------------------
                                    304 	.area XISEG   (XDATA)
                                    305 	.area HOME    (CODE)
                                    306 	.area GSINIT0 (CODE)
                                    307 	.area GSINIT1 (CODE)
                                    308 	.area GSINIT2 (CODE)
                                    309 	.area GSINIT3 (CODE)
                                    310 	.area GSINIT4 (CODE)
                                    311 	.area GSINIT5 (CODE)
                                    312 	.area GSINIT  (CODE)
                                    313 	.area GSFINAL (CODE)
                                    314 	.area CSEG    (CODE)
                                    315 ;--------------------------------------------------------
                                    316 ; interrupt vector 
                                    317 ;--------------------------------------------------------
                                    318 	.area HOME    (CODE)
      000000                        319 __interrupt_vect:
      000000 02r00r00         [24]  320 	ljmp	__sdcc_gsinit_startup
                                    321 ;--------------------------------------------------------
                                    322 ; global & static initialisations
                                    323 ;--------------------------------------------------------
                                    324 	.area HOME    (CODE)
                                    325 	.area GSINIT  (CODE)
                                    326 	.area GSFINAL (CODE)
                                    327 	.area GSINIT  (CODE)
                                    328 	.globl __sdcc_gsinit_startup
                                    329 	.globl __sdcc_program_startup
                                    330 	.globl __start__stack
                                    331 	.globl __mcs51_genXINIT
                                    332 	.globl __mcs51_genXRAMCLEAR
                                    333 	.globl __mcs51_genRAMCLEAR
                                    334 ;	Digital_Clock.c:3: unsigned char angka[10]= {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
      000000 75*00 3F         [24]  335 	mov	_angka,#0x3F
      000003 75*01 06         [24]  336 	mov	(_angka + 0x0001),#0x06
      000006 75*02 5B         [24]  337 	mov	(_angka + 0x0002),#0x5B
      000009 75*03 4F         [24]  338 	mov	(_angka + 0x0003),#0x4F
      00000C 75*04 66         [24]  339 	mov	(_angka + 0x0004),#0x66
      00000F 75*05 6D         [24]  340 	mov	(_angka + 0x0005),#0x6D
      000012 75*06 7D         [24]  341 	mov	(_angka + 0x0006),#0x7D
      000015 75*07 07         [24]  342 	mov	(_angka + 0x0007),#0x07
      000018 75*08 7F         [24]  343 	mov	(_angka + 0x0008),#0x7F
      00001B 75*09 6F         [24]  344 	mov	(_angka + 0x0009),#0x6F
                                    345 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  346 	ljmp	__sdcc_program_startup
                                    347 ;--------------------------------------------------------
                                    348 ; Home
                                    349 ;--------------------------------------------------------
                                    350 	.area HOME    (CODE)
                                    351 	.area HOME    (CODE)
      000003                        352 __sdcc_program_startup:
      000003 02r03r9A         [24]  353 	ljmp	_main
                                    354 ;	return from main will return to caller
                                    355 ;--------------------------------------------------------
                                    356 ; code
                                    357 ;--------------------------------------------------------
                                    358 	.area CSEG    (CODE)
                                    359 ;------------------------------------------------------------
                                    360 ;Allocation info for local variables in function 'delay'
                                    361 ;------------------------------------------------------------
                                    362 ;n                         Allocated to registers r6 r7 
                                    363 ;i                         Allocated to registers r4 r5 
                                    364 ;j                         Allocated to registers r2 r3 
                                    365 ;------------------------------------------------------------
                                    366 ;	Digital_Clock.c:6: void delay(int n)
                                    367 ;	-----------------------------------------
                                    368 ;	 function delay
                                    369 ;	-----------------------------------------
      000000                        370 _delay:
                           000007   371 	ar7 = 0x07
                           000006   372 	ar6 = 0x06
                           000005   373 	ar5 = 0x05
                           000004   374 	ar4 = 0x04
                           000003   375 	ar3 = 0x03
                           000002   376 	ar2 = 0x02
                           000001   377 	ar1 = 0x01
                           000000   378 	ar0 = 0x00
      000000 AE 82            [24]  379 	mov	r6,dpl
      000002 AF 83            [24]  380 	mov	r7,dph
                                    381 ;	Digital_Clock.c:9: for(i=0;i<n;i++)
      000004 7C 00            [12]  382 	mov	r4,#0x00
      000006 7D 00            [12]  383 	mov	r5,#0x00
      000008                        384 00107$:
      000008 C3               [12]  385 	clr	c
      000009 EC               [12]  386 	mov	a,r4
      00000A 9E               [12]  387 	subb	a,r6
      00000B ED               [12]  388 	mov	a,r5
      00000C 64 80            [12]  389 	xrl	a,#0x80
      00000E 8F F0            [24]  390 	mov	b,r7
      000010 63 F0 80         [24]  391 	xrl	b,#0x80
      000013 95 F0            [12]  392 	subb	a,b
      000015 50 14            [24]  393 	jnc	00109$
                                    394 ;	Digital_Clock.c:10: for(j=0;j<135;j++);
      000017 7A 87            [12]  395 	mov	r2,#0x87
      000019 7B 00            [12]  396 	mov	r3,#0x00
      00001B                        397 00105$:
      00001B 1A               [12]  398 	dec	r2
      00001C BA FF 01         [24]  399 	cjne	r2,#0xFF,00126$
      00001F 1B               [12]  400 	dec	r3
      000020                        401 00126$:
      000020 EA               [12]  402 	mov	a,r2
      000021 4B               [12]  403 	orl	a,r3
      000022 70 F7            [24]  404 	jnz	00105$
                                    405 ;	Digital_Clock.c:9: for(i=0;i<n;i++)
      000024 0C               [12]  406 	inc	r4
      000025 BC 00 E0         [24]  407 	cjne	r4,#0x00,00107$
      000028 0D               [12]  408 	inc	r5
      000029 80 DD            [24]  409 	sjmp	00107$
      00002B                        410 00109$:
      00002B 22               [24]  411 	ret
                                    412 ;------------------------------------------------------------
                                    413 ;Allocation info for local variables in function 'ambil_data'
                                    414 ;------------------------------------------------------------
                                    415 ;	Digital_Clock.c:13: void ambil_data()
                                    416 ;	-----------------------------------------
                                    417 ;	 function ambil_data
                                    418 ;	-----------------------------------------
      00002C                        419 _ambil_data:
                                    420 ;	Digital_Clock.c:15: data_temp=data1;
      00002C 85*1E*1A         [24]  421 	mov	_data_temp,_data1
      00002F 85*1F*1B         [24]  422 	mov	(_data_temp + 1),(_data1 + 1)
                                    423 ;	Digital_Clock.c:16: milsec1=(data_temp/10)%10;
      000032 75*00 0A         [24]  424 	mov	__divsint_PARM_2,#0x0A
      000035 75*01 00         [24]  425 	mov	(__divsint_PARM_2 + 1),#0x00
      000038 85*1A 82         [24]  426 	mov	dpl,_data_temp
      00003B 85*1B 83         [24]  427 	mov	dph,(_data_temp + 1)
      00003E 12r00r00         [24]  428 	lcall	__divsint
      000041 75*00 0A         [24]  429 	mov	__modsint_PARM_2,#0x0A
      000044 75*01 00         [24]  430 	mov	(__modsint_PARM_2 + 1),#0x00
      000047 12r00r00         [24]  431 	lcall	__modsint
      00004A 85 82*0A         [24]  432 	mov	_milsec1,dpl
      00004D 85 83*0B         [24]  433 	mov	(_milsec1 + 1),dph
                                    434 ;	Digital_Clock.c:17: milsec2=(data_temp/100)%10;
      000050 75*00 64         [24]  435 	mov	__divsint_PARM_2,#0x64
      000053 75*01 00         [24]  436 	mov	(__divsint_PARM_2 + 1),#0x00
      000056 85*1A 82         [24]  437 	mov	dpl,_data_temp
      000059 85*1B 83         [24]  438 	mov	dph,(_data_temp + 1)
      00005C 12r00r00         [24]  439 	lcall	__divsint
      00005F 75*00 0A         [24]  440 	mov	__modsint_PARM_2,#0x0A
      000062 75*01 00         [24]  441 	mov	(__modsint_PARM_2 + 1),#0x00
      000065 12r00r00         [24]  442 	lcall	__modsint
      000068 85 82*0C         [24]  443 	mov	_milsec2,dpl
      00006B 85 83*0D         [24]  444 	mov	(_milsec2 + 1),dph
                                    445 ;	Digital_Clock.c:18: detik1=(data_temp/1000)%10;
      00006E 75*00 E8         [24]  446 	mov	__divsint_PARM_2,#0xE8
      000071 75*01 03         [24]  447 	mov	(__divsint_PARM_2 + 1),#0x03
      000074 85*1A 82         [24]  448 	mov	dpl,_data_temp
      000077 85*1B 83         [24]  449 	mov	dph,(_data_temp + 1)
      00007A 12r00r00         [24]  450 	lcall	__divsint
      00007D 75*00 0A         [24]  451 	mov	__modsint_PARM_2,#0x0A
      000080 75*01 00         [24]  452 	mov	(__modsint_PARM_2 + 1),#0x00
      000083 12r00r00         [24]  453 	lcall	__modsint
      000086 85 82*0E         [24]  454 	mov	_detik1,dpl
      000089 85 83*0F         [24]  455 	mov	(_detik1 + 1),dph
                                    456 ;	Digital_Clock.c:19: detik2=(data_temp/10000)%10;
      00008C 75*00 10         [24]  457 	mov	__divsint_PARM_2,#0x10
      00008F 75*01 27         [24]  458 	mov	(__divsint_PARM_2 + 1),#0x27
      000092 85*1A 82         [24]  459 	mov	dpl,_data_temp
      000095 85*1B 83         [24]  460 	mov	dph,(_data_temp + 1)
      000098 12r00r00         [24]  461 	lcall	__divsint
      00009B 75*00 0A         [24]  462 	mov	__modsint_PARM_2,#0x0A
      00009E 75*01 00         [24]  463 	mov	(__modsint_PARM_2 + 1),#0x00
      0000A1 12r00r00         [24]  464 	lcall	__modsint
      0000A4 85 82*10         [24]  465 	mov	_detik2,dpl
      0000A7 85 83*11         [24]  466 	mov	(_detik2 + 1),dph
                                    467 ;	Digital_Clock.c:20: menit1=(data_temp/100000)%10;
      0000AA AC*1A            [24]  468 	mov	r4,_data_temp
      0000AC E5*1B            [12]  469 	mov	a,(_data_temp + 1)
      0000AE FD               [12]  470 	mov	r5,a
      0000AF 33               [12]  471 	rlc	a
      0000B0 95 E0            [12]  472 	subb	a,acc
      0000B2 FE               [12]  473 	mov	r6,a
      0000B3 FF               [12]  474 	mov	r7,a
      0000B4 75*00 A0         [24]  475 	mov	__divslong_PARM_2,#0xA0
      0000B7 75*01 86         [24]  476 	mov	(__divslong_PARM_2 + 1),#0x86
      0000BA 75*02 01         [24]  477 	mov	(__divslong_PARM_2 + 2),#0x01
      0000BD 75*03 00         [24]  478 	mov	(__divslong_PARM_2 + 3),#0x00
      0000C0 8C 82            [24]  479 	mov	dpl,r4
      0000C2 8D 83            [24]  480 	mov	dph,r5
      0000C4 8E F0            [24]  481 	mov	b,r6
      0000C6 EF               [12]  482 	mov	a,r7
      0000C7 C0 07            [24]  483 	push	ar7
      0000C9 C0 06            [24]  484 	push	ar6
      0000CB C0 05            [24]  485 	push	ar5
      0000CD C0 04            [24]  486 	push	ar4
      0000CF 12r00r00         [24]  487 	lcall	__divslong
      0000D2 A8 82            [24]  488 	mov	r0,dpl
      0000D4 A9 83            [24]  489 	mov	r1,dph
      0000D6 AA F0            [24]  490 	mov	r2,b
      0000D8 FB               [12]  491 	mov	r3,a
      0000D9 75*00 0A         [24]  492 	mov	__modslong_PARM_2,#0x0A
      0000DC E4               [12]  493 	clr	a
      0000DD F5*01            [12]  494 	mov	(__modslong_PARM_2 + 1),a
      0000DF F5*02            [12]  495 	mov	(__modslong_PARM_2 + 2),a
      0000E1 F5*03            [12]  496 	mov	(__modslong_PARM_2 + 3),a
      0000E3 88 82            [24]  497 	mov	dpl,r0
      0000E5 89 83            [24]  498 	mov	dph,r1
      0000E7 8A F0            [24]  499 	mov	b,r2
      0000E9 EB               [12]  500 	mov	a,r3
      0000EA 12r00r00         [24]  501 	lcall	__modslong
      0000ED A8 82            [24]  502 	mov	r0,dpl
      0000EF A9 83            [24]  503 	mov	r1,dph
      0000F1 D0 04            [24]  504 	pop	ar4
      0000F3 D0 05            [24]  505 	pop	ar5
      0000F5 D0 06            [24]  506 	pop	ar6
      0000F7 D0 07            [24]  507 	pop	ar7
      0000F9 88*12            [24]  508 	mov	_menit1,r0
      0000FB 89*13            [24]  509 	mov	(_menit1 + 1),r1
                                    510 ;	Digital_Clock.c:21: menit2=(data_temp/1000000)%10;
      0000FD 75*00 40         [24]  511 	mov	__divslong_PARM_2,#0x40
      000100 75*01 42         [24]  512 	mov	(__divslong_PARM_2 + 1),#0x42
      000103 75*02 0F         [24]  513 	mov	(__divslong_PARM_2 + 2),#0x0F
      000106 75*03 00         [24]  514 	mov	(__divslong_PARM_2 + 3),#0x00
      000109 8C 82            [24]  515 	mov	dpl,r4
      00010B 8D 83            [24]  516 	mov	dph,r5
      00010D 8E F0            [24]  517 	mov	b,r6
      00010F EF               [12]  518 	mov	a,r7
      000110 C0 07            [24]  519 	push	ar7
      000112 C0 06            [24]  520 	push	ar6
      000114 C0 05            [24]  521 	push	ar5
      000116 C0 04            [24]  522 	push	ar4
      000118 12r00r00         [24]  523 	lcall	__divslong
      00011B A8 82            [24]  524 	mov	r0,dpl
      00011D A9 83            [24]  525 	mov	r1,dph
      00011F AA F0            [24]  526 	mov	r2,b
      000121 FB               [12]  527 	mov	r3,a
      000122 75*00 0A         [24]  528 	mov	__modslong_PARM_2,#0x0A
      000125 E4               [12]  529 	clr	a
      000126 F5*01            [12]  530 	mov	(__modslong_PARM_2 + 1),a
      000128 F5*02            [12]  531 	mov	(__modslong_PARM_2 + 2),a
      00012A F5*03            [12]  532 	mov	(__modslong_PARM_2 + 3),a
      00012C 88 82            [24]  533 	mov	dpl,r0
      00012E 89 83            [24]  534 	mov	dph,r1
      000130 8A F0            [24]  535 	mov	b,r2
      000132 EB               [12]  536 	mov	a,r3
      000133 12r00r00         [24]  537 	lcall	__modslong
      000136 A8 82            [24]  538 	mov	r0,dpl
      000138 A9 83            [24]  539 	mov	r1,dph
      00013A D0 04            [24]  540 	pop	ar4
      00013C D0 05            [24]  541 	pop	ar5
      00013E D0 06            [24]  542 	pop	ar6
      000140 D0 07            [24]  543 	pop	ar7
      000142 88*14            [24]  544 	mov	_menit2,r0
      000144 89*15            [24]  545 	mov	(_menit2 + 1),r1
                                    546 ;	Digital_Clock.c:22: jam1=(data_temp/10000000)%10;
      000146 75*00 80         [24]  547 	mov	__divslong_PARM_2,#0x80
      000149 75*01 96         [24]  548 	mov	(__divslong_PARM_2 + 1),#0x96
      00014C 75*02 98         [24]  549 	mov	(__divslong_PARM_2 + 2),#0x98
      00014F 75*03 00         [24]  550 	mov	(__divslong_PARM_2 + 3),#0x00
      000152 8C 82            [24]  551 	mov	dpl,r4
      000154 8D 83            [24]  552 	mov	dph,r5
      000156 8E F0            [24]  553 	mov	b,r6
      000158 EF               [12]  554 	mov	a,r7
      000159 C0 07            [24]  555 	push	ar7
      00015B C0 06            [24]  556 	push	ar6
      00015D C0 05            [24]  557 	push	ar5
      00015F C0 04            [24]  558 	push	ar4
      000161 12r00r00         [24]  559 	lcall	__divslong
      000164 A8 82            [24]  560 	mov	r0,dpl
      000166 A9 83            [24]  561 	mov	r1,dph
      000168 AA F0            [24]  562 	mov	r2,b
      00016A FB               [12]  563 	mov	r3,a
      00016B 75*00 0A         [24]  564 	mov	__modslong_PARM_2,#0x0A
      00016E E4               [12]  565 	clr	a
      00016F F5*01            [12]  566 	mov	(__modslong_PARM_2 + 1),a
      000171 F5*02            [12]  567 	mov	(__modslong_PARM_2 + 2),a
      000173 F5*03            [12]  568 	mov	(__modslong_PARM_2 + 3),a
      000175 88 82            [24]  569 	mov	dpl,r0
      000177 89 83            [24]  570 	mov	dph,r1
      000179 8A F0            [24]  571 	mov	b,r2
      00017B EB               [12]  572 	mov	a,r3
      00017C 12r00r00         [24]  573 	lcall	__modslong
      00017F A8 82            [24]  574 	mov	r0,dpl
      000181 A9 83            [24]  575 	mov	r1,dph
      000183 D0 04            [24]  576 	pop	ar4
      000185 D0 05            [24]  577 	pop	ar5
      000187 D0 06            [24]  578 	pop	ar6
      000189 D0 07            [24]  579 	pop	ar7
      00018B 88*16            [24]  580 	mov	_jam1,r0
      00018D 89*17            [24]  581 	mov	(_jam1 + 1),r1
                                    582 ;	Digital_Clock.c:23: jam2=(data_temp/100000000)%10;
      00018F 75*00 00         [24]  583 	mov	__divslong_PARM_2,#0x00
      000192 75*01 E1         [24]  584 	mov	(__divslong_PARM_2 + 1),#0xE1
      000195 75*02 F5         [24]  585 	mov	(__divslong_PARM_2 + 2),#0xF5
      000198 75*03 05         [24]  586 	mov	(__divslong_PARM_2 + 3),#0x05
      00019B 8C 82            [24]  587 	mov	dpl,r4
      00019D 8D 83            [24]  588 	mov	dph,r5
      00019F 8E F0            [24]  589 	mov	b,r6
      0001A1 EF               [12]  590 	mov	a,r7
      0001A2 12r00r00         [24]  591 	lcall	__divslong
      0001A5 AC 82            [24]  592 	mov	r4,dpl
      0001A7 AD 83            [24]  593 	mov	r5,dph
      0001A9 AE F0            [24]  594 	mov	r6,b
      0001AB FF               [12]  595 	mov	r7,a
      0001AC 75*00 0A         [24]  596 	mov	__modslong_PARM_2,#0x0A
      0001AF E4               [12]  597 	clr	a
      0001B0 F5*01            [12]  598 	mov	(__modslong_PARM_2 + 1),a
      0001B2 F5*02            [12]  599 	mov	(__modslong_PARM_2 + 2),a
      0001B4 F5*03            [12]  600 	mov	(__modslong_PARM_2 + 3),a
      0001B6 8C 82            [24]  601 	mov	dpl,r4
      0001B8 8D 83            [24]  602 	mov	dph,r5
      0001BA 8E F0            [24]  603 	mov	b,r6
      0001BC EF               [12]  604 	mov	a,r7
      0001BD 12r00r00         [24]  605 	lcall	__modslong
      0001C0 AC 82            [24]  606 	mov	r4,dpl
      0001C2 AD 83            [24]  607 	mov	r5,dph
      0001C4 8C*18            [24]  608 	mov	_jam2,r4
      0001C6 8D*19            [24]  609 	mov	(_jam2 + 1),r5
      0001C8 22               [24]  610 	ret
                                    611 ;------------------------------------------------------------
                                    612 ;Allocation info for local variables in function 'tampilkan_seven_segment'
                                    613 ;------------------------------------------------------------
                                    614 ;	Digital_Clock.c:26: void tampilkan_seven_segment()
                                    615 ;	-----------------------------------------
                                    616 ;	 function tampilkan_seven_segment
                                    617 ;	-----------------------------------------
      0001C9                        618 _tampilkan_seven_segment:
                                    619 ;	Digital_Clock.c:28: for(jam2=0;jam2<3;jam2++)
      0001C9 E4               [12]  620 	clr	a
      0001CA F5*18            [12]  621 	mov	_jam2,a
      0001CC F5*19            [12]  622 	mov	(_jam2 + 1),a
      0001CE                        623 00123$:
                                    624 ;	Digital_Clock.c:30: for(jam1=0;jam1<5;jam1++)
      0001CE E4               [12]  625 	clr	a
      0001CF F5*16            [12]  626 	mov	_jam1,a
      0001D1 F5*17            [12]  627 	mov	(_jam1 + 1),a
      0001D3                        628 00121$:
                                    629 ;	Digital_Clock.c:32: for(menit2=0;menit2<6;menit2++)
      0001D3 E4               [12]  630 	clr	a
      0001D4 F5*14            [12]  631 	mov	_menit2,a
      0001D6 F5*15            [12]  632 	mov	(_menit2 + 1),a
      0001D8                        633 00119$:
                                    634 ;	Digital_Clock.c:34: for(menit1=0;menit1<10;menit1++)
      0001D8 E4               [12]  635 	clr	a
      0001D9 F5*12            [12]  636 	mov	_menit1,a
      0001DB F5*13            [12]  637 	mov	(_menit1 + 1),a
      0001DD                        638 00117$:
                                    639 ;	Digital_Clock.c:36: for(detik2=0;detik2<6;detik2++)
      0001DD E4               [12]  640 	clr	a
      0001DE F5*10            [12]  641 	mov	_detik2,a
      0001E0 F5*11            [12]  642 	mov	(_detik2 + 1),a
      0001E2                        643 00115$:
                                    644 ;	Digital_Clock.c:38: for(detik1=0;detik1<10;detik1++)
      0001E2 E4               [12]  645 	clr	a
      0001E3 F5*0E            [12]  646 	mov	_detik1,a
      0001E5 F5*0F            [12]  647 	mov	(_detik1 + 1),a
      0001E7                        648 00113$:
                                    649 ;	Digital_Clock.c:40: for(milsec2=0;milsec2<10;milsec2++)
      0001E7 E4               [12]  650 	clr	a
      0001E8 F5*0C            [12]  651 	mov	_milsec2,a
      0001EA F5*0D            [12]  652 	mov	(_milsec2 + 1),a
      0001EC                        653 00111$:
                                    654 ;	Digital_Clock.c:42: for(milsec1=0;milsec1<10;milsec1++)
      0001EC E4               [12]  655 	clr	a
      0001ED F5*0A            [12]  656 	mov	_milsec1,a
      0001EF F5*0B            [12]  657 	mov	(_milsec1 + 1),a
      0001F1                        658 00109$:
                                    659 ;	Digital_Clock.c:45: P0_0=0;
      0001F1 C2 80            [12]  660 	clr	_P0_0
                                    661 ;	Digital_Clock.c:46: P0_1=1;
      0001F3 D2 81            [12]  662 	setb	_P0_1
                                    663 ;	Digital_Clock.c:47: P0_2=1;
      0001F5 D2 82            [12]  664 	setb	_P0_2
                                    665 ;	Digital_Clock.c:48: P0_3=1;
      0001F7 D2 83            [12]  666 	setb	_P0_3
                                    667 ;	Digital_Clock.c:49: P0_4=1;
      0001F9 D2 84            [12]  668 	setb	_P0_4
                                    669 ;	Digital_Clock.c:50: P0_5=1;
      0001FB D2 85            [12]  670 	setb	_P0_5
                                    671 ;	Digital_Clock.c:51: P0_6=1;
      0001FD D2 86            [12]  672 	setb	_P0_6
                                    673 ;	Digital_Clock.c:52: P0_7=1;
      0001FF D2 87            [12]  674 	setb	_P0_7
                                    675 ;	Digital_Clock.c:53: P3=angka[milsec1];
      000201 E5*0A            [12]  676 	mov	a,_milsec1
      000203 24r00            [12]  677 	add	a,#_angka
      000205 F9               [12]  678 	mov	r1,a
      000206 87 B0            [24]  679 	mov	_P3,@r1
                                    680 ;	Digital_Clock.c:54: delay(1);
      000208 90 00 01         [24]  681 	mov	dptr,#0x0001
      00020B 12r00r00         [24]  682 	lcall	_delay
                                    683 ;	Digital_Clock.c:56: P0_0=1;
      00020E D2 80            [12]  684 	setb	_P0_0
                                    685 ;	Digital_Clock.c:57: P0_1=0;
      000210 C2 81            [12]  686 	clr	_P0_1
                                    687 ;	Digital_Clock.c:58: P0_2=1;
      000212 D2 82            [12]  688 	setb	_P0_2
                                    689 ;	Digital_Clock.c:59: P0_3=1;
      000214 D2 83            [12]  690 	setb	_P0_3
                                    691 ;	Digital_Clock.c:60: P0_4=1;
      000216 D2 84            [12]  692 	setb	_P0_4
                                    693 ;	Digital_Clock.c:61: P0_5=1;
      000218 D2 85            [12]  694 	setb	_P0_5
                                    695 ;	Digital_Clock.c:62: P0_6=1;
      00021A D2 86            [12]  696 	setb	_P0_6
                                    697 ;	Digital_Clock.c:63: P0_7=1;
      00021C D2 87            [12]  698 	setb	_P0_7
                                    699 ;	Digital_Clock.c:64: P3=angka[milsec2];
      00021E E5*0C            [12]  700 	mov	a,_milsec2
      000220 24r00            [12]  701 	add	a,#_angka
      000222 F9               [12]  702 	mov	r1,a
      000223 87 B0            [24]  703 	mov	_P3,@r1
                                    704 ;	Digital_Clock.c:65: delay(1);
      000225 90 00 01         [24]  705 	mov	dptr,#0x0001
      000228 12r00r00         [24]  706 	lcall	_delay
                                    707 ;	Digital_Clock.c:67: P0_0=1;
      00022B D2 80            [12]  708 	setb	_P0_0
                                    709 ;	Digital_Clock.c:68: P0_1=1;
      00022D D2 81            [12]  710 	setb	_P0_1
                                    711 ;	Digital_Clock.c:69: P0_2=0;
      00022F C2 82            [12]  712 	clr	_P0_2
                                    713 ;	Digital_Clock.c:70: P0_3=1;
      000231 D2 83            [12]  714 	setb	_P0_3
                                    715 ;	Digital_Clock.c:71: P0_4=1;
      000233 D2 84            [12]  716 	setb	_P0_4
                                    717 ;	Digital_Clock.c:72: P0_5=1;
      000235 D2 85            [12]  718 	setb	_P0_5
                                    719 ;	Digital_Clock.c:73: P0_6=1;
      000237 D2 86            [12]  720 	setb	_P0_6
                                    721 ;	Digital_Clock.c:74: P0_7=1;
      000239 D2 87            [12]  722 	setb	_P0_7
                                    723 ;	Digital_Clock.c:75: P3=angka[detik1];
      00023B E5*0E            [12]  724 	mov	a,_detik1
      00023D 24r00            [12]  725 	add	a,#_angka
      00023F F9               [12]  726 	mov	r1,a
      000240 87 B0            [24]  727 	mov	_P3,@r1
                                    728 ;	Digital_Clock.c:76: delay(1);
      000242 90 00 01         [24]  729 	mov	dptr,#0x0001
      000245 12r00r00         [24]  730 	lcall	_delay
                                    731 ;	Digital_Clock.c:78: P0_0=1;
      000248 D2 80            [12]  732 	setb	_P0_0
                                    733 ;	Digital_Clock.c:79: P0_1=1;
      00024A D2 81            [12]  734 	setb	_P0_1
                                    735 ;	Digital_Clock.c:80: P0_2=1;
      00024C D2 82            [12]  736 	setb	_P0_2
                                    737 ;	Digital_Clock.c:81: P0_3=0;
      00024E C2 83            [12]  738 	clr	_P0_3
                                    739 ;	Digital_Clock.c:82: P0_4=1;
      000250 D2 84            [12]  740 	setb	_P0_4
                                    741 ;	Digital_Clock.c:83: P0_5=1;
      000252 D2 85            [12]  742 	setb	_P0_5
                                    743 ;	Digital_Clock.c:84: P0_6=1;
      000254 D2 86            [12]  744 	setb	_P0_6
                                    745 ;	Digital_Clock.c:85: P0_7=1;
      000256 D2 87            [12]  746 	setb	_P0_7
                                    747 ;	Digital_Clock.c:86: P3=angka[detik2];
      000258 E5*10            [12]  748 	mov	a,_detik2
      00025A 24r00            [12]  749 	add	a,#_angka
      00025C F9               [12]  750 	mov	r1,a
      00025D 87 B0            [24]  751 	mov	_P3,@r1
                                    752 ;	Digital_Clock.c:87: delay(1);
      00025F 90 00 01         [24]  753 	mov	dptr,#0x0001
      000262 12r00r00         [24]  754 	lcall	_delay
                                    755 ;	Digital_Clock.c:89: P0_0=0;
      000265 C2 80            [12]  756 	clr	_P0_0
                                    757 ;	Digital_Clock.c:90: P0_1=1;
      000267 D2 81            [12]  758 	setb	_P0_1
                                    759 ;	Digital_Clock.c:91: P0_2=1;
      000269 D2 82            [12]  760 	setb	_P0_2
                                    761 ;	Digital_Clock.c:92: P0_3=1;
      00026B D2 83            [12]  762 	setb	_P0_3
                                    763 ;	Digital_Clock.c:93: P0_4=0;
      00026D C2 84            [12]  764 	clr	_P0_4
                                    765 ;	Digital_Clock.c:94: P0_5=1;
      00026F D2 85            [12]  766 	setb	_P0_5
                                    767 ;	Digital_Clock.c:95: P0_6=1;
      000271 D2 86            [12]  768 	setb	_P0_6
                                    769 ;	Digital_Clock.c:96: P0_7=1;
      000273 D2 87            [12]  770 	setb	_P0_7
                                    771 ;	Digital_Clock.c:97: P3=angka[menit1];
      000275 E5*12            [12]  772 	mov	a,_menit1
      000277 24r00            [12]  773 	add	a,#_angka
      000279 F9               [12]  774 	mov	r1,a
      00027A 87 B0            [24]  775 	mov	_P3,@r1
                                    776 ;	Digital_Clock.c:98: delay(1);
      00027C 90 00 01         [24]  777 	mov	dptr,#0x0001
      00027F 12r00r00         [24]  778 	lcall	_delay
                                    779 ;	Digital_Clock.c:100: P0_0=0;
      000282 C2 80            [12]  780 	clr	_P0_0
                                    781 ;	Digital_Clock.c:101: P0_1=1;
      000284 D2 81            [12]  782 	setb	_P0_1
                                    783 ;	Digital_Clock.c:102: P0_2=1;
      000286 D2 82            [12]  784 	setb	_P0_2
                                    785 ;	Digital_Clock.c:103: P0_3=1;
      000288 D2 83            [12]  786 	setb	_P0_3
                                    787 ;	Digital_Clock.c:104: P0_4=1;
      00028A D2 84            [12]  788 	setb	_P0_4
                                    789 ;	Digital_Clock.c:105: P0_5=0;
      00028C C2 85            [12]  790 	clr	_P0_5
                                    791 ;	Digital_Clock.c:106: P0_6=1;
      00028E D2 86            [12]  792 	setb	_P0_6
                                    793 ;	Digital_Clock.c:107: P0_7=1;
      000290 D2 87            [12]  794 	setb	_P0_7
                                    795 ;	Digital_Clock.c:108: P3=angka[menit2];
      000292 E5*14            [12]  796 	mov	a,_menit2
      000294 24r00            [12]  797 	add	a,#_angka
      000296 F9               [12]  798 	mov	r1,a
      000297 87 B0            [24]  799 	mov	_P3,@r1
                                    800 ;	Digital_Clock.c:109: delay(1);
      000299 90 00 01         [24]  801 	mov	dptr,#0x0001
      00029C 12r00r00         [24]  802 	lcall	_delay
                                    803 ;	Digital_Clock.c:111: P0_0=0;
      00029F C2 80            [12]  804 	clr	_P0_0
                                    805 ;	Digital_Clock.c:112: P0_1=1;
      0002A1 D2 81            [12]  806 	setb	_P0_1
                                    807 ;	Digital_Clock.c:113: P0_2=1;
      0002A3 D2 82            [12]  808 	setb	_P0_2
                                    809 ;	Digital_Clock.c:114: P0_3=1;
      0002A5 D2 83            [12]  810 	setb	_P0_3
                                    811 ;	Digital_Clock.c:115: P0_4=1;
      0002A7 D2 84            [12]  812 	setb	_P0_4
                                    813 ;	Digital_Clock.c:116: P0_5=1;
      0002A9 D2 85            [12]  814 	setb	_P0_5
                                    815 ;	Digital_Clock.c:117: P0_6=0;
      0002AB C2 86            [12]  816 	clr	_P0_6
                                    817 ;	Digital_Clock.c:118: P0_7=1;
      0002AD D2 87            [12]  818 	setb	_P0_7
                                    819 ;	Digital_Clock.c:119: P3=angka[jam1];
      0002AF E5*16            [12]  820 	mov	a,_jam1
      0002B1 24r00            [12]  821 	add	a,#_angka
      0002B3 F9               [12]  822 	mov	r1,a
      0002B4 87 B0            [24]  823 	mov	_P3,@r1
                                    824 ;	Digital_Clock.c:120: delay(1);
      0002B6 90 00 01         [24]  825 	mov	dptr,#0x0001
      0002B9 12r00r00         [24]  826 	lcall	_delay
                                    827 ;	Digital_Clock.c:122: P0_0=0;
      0002BC C2 80            [12]  828 	clr	_P0_0
                                    829 ;	Digital_Clock.c:123: P0_1=1;
      0002BE D2 81            [12]  830 	setb	_P0_1
                                    831 ;	Digital_Clock.c:124: P0_2=1;
      0002C0 D2 82            [12]  832 	setb	_P0_2
                                    833 ;	Digital_Clock.c:125: P0_3=1;
      0002C2 D2 83            [12]  834 	setb	_P0_3
                                    835 ;	Digital_Clock.c:126: P0_4=1;
      0002C4 D2 84            [12]  836 	setb	_P0_4
                                    837 ;	Digital_Clock.c:127: P0_5=1;
      0002C6 D2 85            [12]  838 	setb	_P0_5
                                    839 ;	Digital_Clock.c:128: P0_6=1;
      0002C8 D2 86            [12]  840 	setb	_P0_6
                                    841 ;	Digital_Clock.c:129: P0_7=0;
      0002CA C2 87            [12]  842 	clr	_P0_7
                                    843 ;	Digital_Clock.c:130: P3=angka[jam2];
      0002CC E5*18            [12]  844 	mov	a,_jam2
      0002CE 24r00            [12]  845 	add	a,#_angka
      0002D0 F9               [12]  846 	mov	r1,a
      0002D1 87 B0            [24]  847 	mov	_P3,@r1
                                    848 ;	Digital_Clock.c:131: delay(1);
      0002D3 90 00 01         [24]  849 	mov	dptr,#0x0001
      0002D6 12r00r00         [24]  850 	lcall	_delay
                                    851 ;	Digital_Clock.c:42: for(milsec1=0;milsec1<10;milsec1++)
      0002D9 05*0A            [12]  852 	inc	_milsec1
      0002DB E4               [12]  853 	clr	a
      0002DC B5*0A 02         [24]  854 	cjne	a,_milsec1,00172$
      0002DF 05*0B            [12]  855 	inc	(_milsec1 + 1)
      0002E1                        856 00172$:
      0002E1 C3               [12]  857 	clr	c
      0002E2 E5*0A            [12]  858 	mov	a,_milsec1
      0002E4 94 0A            [12]  859 	subb	a,#0x0A
      0002E6 E5*0B            [12]  860 	mov	a,(_milsec1 + 1)
      0002E8 64 80            [12]  861 	xrl	a,#0x80
      0002EA 94 80            [12]  862 	subb	a,#0x80
      0002EC 50 03            [24]  863 	jnc	00173$
      0002EE 02r01rF1         [24]  864 	ljmp	00109$
      0002F1                        865 00173$:
                                    866 ;	Digital_Clock.c:40: for(milsec2=0;milsec2<10;milsec2++)
      0002F1 05*0C            [12]  867 	inc	_milsec2
      0002F3 E4               [12]  868 	clr	a
      0002F4 B5*0C 02         [24]  869 	cjne	a,_milsec2,00174$
      0002F7 05*0D            [12]  870 	inc	(_milsec2 + 1)
      0002F9                        871 00174$:
      0002F9 C3               [12]  872 	clr	c
      0002FA E5*0C            [12]  873 	mov	a,_milsec2
      0002FC 94 0A            [12]  874 	subb	a,#0x0A
      0002FE E5*0D            [12]  875 	mov	a,(_milsec2 + 1)
      000300 64 80            [12]  876 	xrl	a,#0x80
      000302 94 80            [12]  877 	subb	a,#0x80
      000304 50 03            [24]  878 	jnc	00175$
      000306 02r01rEC         [24]  879 	ljmp	00111$
      000309                        880 00175$:
                                    881 ;	Digital_Clock.c:38: for(detik1=0;detik1<10;detik1++)
      000309 05*0E            [12]  882 	inc	_detik1
      00030B E4               [12]  883 	clr	a
      00030C B5*0E 02         [24]  884 	cjne	a,_detik1,00176$
      00030F 05*0F            [12]  885 	inc	(_detik1 + 1)
      000311                        886 00176$:
      000311 C3               [12]  887 	clr	c
      000312 E5*0E            [12]  888 	mov	a,_detik1
      000314 94 0A            [12]  889 	subb	a,#0x0A
      000316 E5*0F            [12]  890 	mov	a,(_detik1 + 1)
      000318 64 80            [12]  891 	xrl	a,#0x80
      00031A 94 80            [12]  892 	subb	a,#0x80
      00031C 50 03            [24]  893 	jnc	00177$
      00031E 02r01rE7         [24]  894 	ljmp	00113$
      000321                        895 00177$:
                                    896 ;	Digital_Clock.c:36: for(detik2=0;detik2<6;detik2++)
      000321 05*10            [12]  897 	inc	_detik2
      000323 E4               [12]  898 	clr	a
      000324 B5*10 02         [24]  899 	cjne	a,_detik2,00178$
      000327 05*11            [12]  900 	inc	(_detik2 + 1)
      000329                        901 00178$:
      000329 C3               [12]  902 	clr	c
      00032A E5*10            [12]  903 	mov	a,_detik2
      00032C 94 06            [12]  904 	subb	a,#0x06
      00032E E5*11            [12]  905 	mov	a,(_detik2 + 1)
      000330 64 80            [12]  906 	xrl	a,#0x80
      000332 94 80            [12]  907 	subb	a,#0x80
      000334 50 03            [24]  908 	jnc	00179$
      000336 02r01rE2         [24]  909 	ljmp	00115$
      000339                        910 00179$:
                                    911 ;	Digital_Clock.c:34: for(menit1=0;menit1<10;menit1++)
      000339 05*12            [12]  912 	inc	_menit1
      00033B E4               [12]  913 	clr	a
      00033C B5*12 02         [24]  914 	cjne	a,_menit1,00180$
      00033F 05*13            [12]  915 	inc	(_menit1 + 1)
      000341                        916 00180$:
      000341 C3               [12]  917 	clr	c
      000342 E5*12            [12]  918 	mov	a,_menit1
      000344 94 0A            [12]  919 	subb	a,#0x0A
      000346 E5*13            [12]  920 	mov	a,(_menit1 + 1)
      000348 64 80            [12]  921 	xrl	a,#0x80
      00034A 94 80            [12]  922 	subb	a,#0x80
      00034C 50 03            [24]  923 	jnc	00181$
      00034E 02r01rDD         [24]  924 	ljmp	00117$
      000351                        925 00181$:
                                    926 ;	Digital_Clock.c:32: for(menit2=0;menit2<6;menit2++)
      000351 05*14            [12]  927 	inc	_menit2
      000353 E4               [12]  928 	clr	a
      000354 B5*14 02         [24]  929 	cjne	a,_menit2,00182$
      000357 05*15            [12]  930 	inc	(_menit2 + 1)
      000359                        931 00182$:
      000359 C3               [12]  932 	clr	c
      00035A E5*14            [12]  933 	mov	a,_menit2
      00035C 94 06            [12]  934 	subb	a,#0x06
      00035E E5*15            [12]  935 	mov	a,(_menit2 + 1)
      000360 64 80            [12]  936 	xrl	a,#0x80
      000362 94 80            [12]  937 	subb	a,#0x80
      000364 50 03            [24]  938 	jnc	00183$
      000366 02r01rD8         [24]  939 	ljmp	00119$
      000369                        940 00183$:
                                    941 ;	Digital_Clock.c:30: for(jam1=0;jam1<5;jam1++)
      000369 05*16            [12]  942 	inc	_jam1
      00036B E4               [12]  943 	clr	a
      00036C B5*16 02         [24]  944 	cjne	a,_jam1,00184$
      00036F 05*17            [12]  945 	inc	(_jam1 + 1)
      000371                        946 00184$:
      000371 C3               [12]  947 	clr	c
      000372 E5*16            [12]  948 	mov	a,_jam1
      000374 94 05            [12]  949 	subb	a,#0x05
      000376 E5*17            [12]  950 	mov	a,(_jam1 + 1)
      000378 64 80            [12]  951 	xrl	a,#0x80
      00037A 94 80            [12]  952 	subb	a,#0x80
      00037C 50 03            [24]  953 	jnc	00185$
      00037E 02r01rD3         [24]  954 	ljmp	00121$
      000381                        955 00185$:
                                    956 ;	Digital_Clock.c:28: for(jam2=0;jam2<3;jam2++)
      000381 05*18            [12]  957 	inc	_jam2
      000383 E4               [12]  958 	clr	a
      000384 B5*18 02         [24]  959 	cjne	a,_jam2,00186$
      000387 05*19            [12]  960 	inc	(_jam2 + 1)
      000389                        961 00186$:
      000389 C3               [12]  962 	clr	c
      00038A E5*18            [12]  963 	mov	a,_jam2
      00038C 94 03            [12]  964 	subb	a,#0x03
      00038E E5*19            [12]  965 	mov	a,(_jam2 + 1)
      000390 64 80            [12]  966 	xrl	a,#0x80
      000392 94 80            [12]  967 	subb	a,#0x80
      000394 50 03            [24]  968 	jnc	00187$
      000396 02r01rCE         [24]  969 	ljmp	00123$
      000399                        970 00187$:
      000399 22               [24]  971 	ret
                                    972 ;------------------------------------------------------------
                                    973 ;Allocation info for local variables in function 'main'
                                    974 ;------------------------------------------------------------
                                    975 ;	Digital_Clock.c:143: void main(void)
                                    976 ;	-----------------------------------------
                                    977 ;	 function main
                                    978 ;	-----------------------------------------
      00039A                        979 _main:
                                    980 ;	Digital_Clock.c:145: data1=0;
      00039A E4               [12]  981 	clr	a
      00039B F5*1E            [12]  982 	mov	_data1,a
      00039D F5*1F            [12]  983 	mov	(_data1 + 1),a
                                    984 ;	Digital_Clock.c:146: while (1)
      00039F                        985 00102$:
                                    986 ;	Digital_Clock.c:148: ambil_data();
      00039F 12r00r2C         [24]  987 	lcall	_ambil_data
                                    988 ;	Digital_Clock.c:149: tampilkan_seven_segment();
      0003A2 12r01rC9         [24]  989 	lcall	_tampilkan_seven_segment
      0003A5 80 F8            [24]  990 	sjmp	00102$
                                    991 	.area CSEG    (CODE)
                                    992 	.area CONST   (CODE)
                                    993 	.area XINIT   (CODE)
                                    994 	.area CABS    (ABS,CODE)
